https://cloud.spring.io/spring-cloud-static/spring-cloud-netflix/2.1.2.RELEASE/single/spring-cloud-netflix.html#_router_and_filter_zuul

管理端点：
/actuator/routes
/actuator/filters

-------------------------zuul 路由配置实例---------------

http://alpha.study.com:8111/a
http://bravo.study.com:8121/b
http://bravo.study.com:8121/b/all

zuul:
  prefix: /api
  stripPrefix: true
  host:
    maxTotalConnections: 200
    maxPerRouteConnections: 20
  ignoredServices: '*'
  routes:
    alpha:
      path: /a/**
      serviceId: alpha
      stripPrefix: false ##默认值为true
    bravo:
      path: /v1/b/**
      serviceId: bravo

http://zuul.study.com:8101/api/a
http://zuul.study.com:8101/api/v1/b/b
http://zuul.study.com:8101/api/v1/b/b/all

参考源码 PreDecorationFilter -> RouteLocator(DiscoveryClientRouteLocator -> SimpleRouteLocator) -> Route
核心是 SimpleRouteLocator.getSimpleMatchingRoute 方法，根据 request url 从 ZuulRoute 列表中找到匹配的 ZuulRoute，返回一个新建的 Route 实例。
根据 ZuulRoute 创建 Route 时，会按照两个层级的 stripPrefix 值分别剥去相关 prefix（内层的剥去第一个 * 号前所有的字符），剩余部分为真正的 path。

显然，没法配置 http://zuul.study.com:8101/api/v2/a 这种url。如果 prefix=/api/v2，会导致 bravo 错误；如果 prefix=/api，则 alpha route 不好配。
必须修改 alpha 项目提供的服务地址才行（例如 http://alpha.study.com:8111/v2/a）。


--------------------API 网关路由方案 2019-09-06-----------------------
ID  NAME    SYSTEM  REQ_URL                          REQ_METHOD  BACKEND_SYSTEM_TYPE BACKEND_URL                   BACKEND_METHOD  SERVICE_ID  TIMEOUT
1   alpha a alpha   http://zuul.study.com:8101/api/a GET         1                   http://alpha.study.com:8111/a GET             alpha       10000

老网关取巧将 zuul.servlet-path=/，这样，所有请求都进了 ZuulServlet 而没走 DispatcherServlet，导致 actuator 无法使用。
尝试采用默认的 zuul.servlet-path=/zuul，通过 ZuulHandlerMapping 将数据库中所有网关请求URL中path的第一段（如上例的 /api/**）作为 mapping 路径，指定
它们都由 ZuulController（ZuulServlet） 处理。构造全部 mapping 路径的逻辑由 GatewayRouteLocator 的 getRoutes 方法实现。


--------------------API 网关路由方案 打脸 2019-09-07-----------------------
老网关思路是可行的，是Spring Boot升级到2.0后zuul.servlet-path配置废弃，必须通过编程方式设置DispatcherServlet的url mapping。而我已经忘了
url mapping的路径模式必须是 /* 结尾的，所以不生效…… 乌龙乌龙啦

https://docs.spring.io/spring/docs/5.1.6.RELEASE/spring-framework-reference/web.html#mvc-servlet
《servlet-3_1-final.pdf》 chapter 12：
- 优先精确路径匹配（所有非特殊匹配都是精确匹配，注意空字符串"" 是一种特殊的精确匹配，指向应用的上下文的根 app context root）
- 接着尝试路径匹配，按照最长匹配路径优先命中原则（路径匹配以 / 开始以 /* 结束）
- 接着尝试扩展名匹配（扩展名匹配以 *. 开始）
- 使用默认匹配（只包含 /）

让ZuulServlet 匹配 /，让 DispatcherServlet 匹配 /apig/*。可以看到两者区别：
老网关思路下的servlets：
    "servlets": [{
        "mappings": ["/"],
        "name": "default",
        "className": "org.apache.catalina.servlets.DefaultServlet"
    }, {
        "mappings": ["/actuator/hystrix.stream/*"],
        "name": "hystrix.stream-actuator-endpoint",
        "className": "com.netflix.hystrix.contrib.metrics.eventstream.HystrixMetricsStreamServlet"
    }, {
        "mappings": ["/apig/*", "/favicon.ico"],
        "name": "dispatcherServlet",
        "className": "org.springframework.web.servlet.DispatcherServlet"
    }, {
        "mappings": ["/*"],
        "name": "zuulServlet",
        "className": "com.netflix.zuul.http.ZuulServlet"
    }]

昨天的思路：
    "servlets": [{
        "mappings": [],
        "name": "default",
        "className": "org.apache.catalina.servlets.DefaultServlet"
    }, {
        "mappings": ["/actuator/hystrix.stream/*"],
        "name": "hystrix.stream-actuator-endpoint",
        "className": "com.netflix.hystrix.contrib.metrics.eventstream.HystrixMetricsStreamServlet"
    }, {
        "mappings": ["/"],
        "name": "dispatcherServlet",
        "className": "org.springframework.web.servlet.DispatcherServlet"
    }, {
        "mappings": ["/zuul/*"],
        "name": "zuulServlet",
        "className": "com.netflix.zuul.http.ZuulServlet"
    }]

重新改为老网关思路。
actuator 访问地址变为 http://zuul.study.com:8101/apig/actuator
注意到HystrixMetricsStreamServlet 的 mappings 是 "/actuator/hystrix.stream/*"，这以后可能是个坑。



--------------------API 网关过滤器热加载 2019-09-09-----------------------
热加载原型。用自定义类加载器加载 resources/filters 目录下的所有 class，并找出所有 CoreFilter 实现类。
Watcher线程每隔十秒重新加载所有 class。

用 IDEA run 运行时，必须重命名 gordon.scdemo.zuulgateway.apig.filter.impl 包，否则是由 AppClassLoader 加载，无法热加载。


















